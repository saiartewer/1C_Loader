&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	ЗаписатьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеНаСервере()
	
	Документ = Документы.ПриходнаяНакладная.СоздатьДокумент();
	
	
	//НайденныйДокумент = Документы.ПриходнаяНакладная.НайтиПоРеквизиту("ДатаДокумента", ТекущаяДатаСеанса());//это запрос к БД
	
	//Если НайденныйДокумент <> Документы.ПриходнаяНакладная.ПустаяСсылка() Тогда
	//	Возврат;	
	//КонецЕсли;
	
	Для Каждого СтрокаДанных Из Объект.ДанныеФайла Цикл
		
		Товар = Документ.Товары.Добавить();
		//Товар.Наименование = СтрокаДанных.Наименование
		ЗаполнитьЗначенияСвойств(Товар, СтрокаДанных);	
	
	КонецЦикла;
	
	Документ.Дата = ТекущаяДатаСеанса();
	Документ.Записать();
	
	Сообщить("Создание контрагентов завершено");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	Объект.ДанныеФайла.Очистить();

	Если Объект.ПутьКФайлу = "" Тогда
		Возврат;
	КонецЕсли;

	ПоследовательноеЧтение = Истина;

	Если Объект.ФорматФайла = "Все" Тогда

		Если СтрНайти(Объект.ПутьКФайлу, ".txt") Или СтрНайти(Объект.ПутьКФайлу, ".csv") Тогда

			ПрочитатьTXT_CSV(ПоследовательноеЧтение);

		ИначеЕсли СтрНайти(Объект.ПутьКФайлу, "xls") Или СтрНайти(Объект.ПутьКФайлу, "xlsx") Тогда

			ПрочитатьXLS();

		ИначеЕсли СтрНайти(Объект.ПутьКФайлу, "dbf") Тогда

			ПрочитатьDBF();

		ИначеЕсли СтрНайти(Объект.ПутьКФайлу, "xml") Тогда

			Прочитать_XML();
			Прочитать_XML_XDTO();

		КонецЕсли;

	ИначеЕсли Объект.ФорматФайла = "TXT" Или Объект.ФорматФайла = "CSV" Тогда

		ПоследовательноеЧтение = Истина;
		ПрочитатьTXT_CSV(ПоследовательноеЧтение);

	ИначеЕсли Объект.ФорматФайла = "XLS" Тогда
		ПрочитатьXLS();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Прочитать_XML()
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Объект.ПутьКФайлу);

	Пока ЧтениеXML.Прочитать() Цикл

		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда

			Если ЧтениеXML.Имя = "Product" Тогда

				НоваяСтрока = Объект.ДанныеФайла.Добавить();
				Продолжить;

			ИначеЕсли ЧтениеXML.Имя = "NAME"
			 	ИЛИ ЧтениеXML.Имя = "PRICE"
			  	ИЛИ ЧтениеXML.Имя = "QUANTITY" Тогда

				ИмяТекущегоУзла = ЧтениеXML.Имя;
				Продолжить;

			КонецЕсли;

		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда

			Если ИмяТекущегоУзла = "NAME" Тогда
				НоваяСтрока.Наименование = ЧтениеXML.Значение;
			ИначеЕсли ИмяТекущегоУзла = "PRICE" Тогда
				НоваяСтрока.Цена = ЧтениеXML.Значение;
			ИначеЕсли ИмяТекущегоУзла = "QUANTITY" Тогда
				НоваяСтрока.Количество = ЧтениеXML.Значение;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	ЧтениеXML.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура Прочитать_XML_XDTO()
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Объект.ПутьКФайлу);

	ТоварыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	Для Каждого ТоварXDTO Из ТоварыXDTO.Product Цикл
		НоваяСтрока = Объект.ДанныеФайла.Добавить();
		НоваяСтрока.Наименование = ТоварXDTO.Name;
		НоваяСтрока.Цена = ТоварXDTO.Price;	
		НоваяСтрока.Количество = ТоварXDTO.Quaintity;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьDBF()
	//Имя файла до 8 символов

	ФайлДБФ = Новый XBase;
	ФайлДБФ.ОткрытьФайл(Объект.ПутьКФайлу);

	Если ФайлДБФ.Первая() = Ложь Тогда
		Возврат;
	КонецЕсли;

	Пока ФайлДБФ.ВКонце() = Ложь Цикл

		НоваяСтрока = Объект.ДанныеФайла.Добавить();
		НоваяСтрока.Наименование = ФайлДБФ.NAME;
		НоваяСтрока.Количество = ФайлДБФ.QUANTITY;
		НоваяСтрока.Цена = ФайлДБФ.PRICE;
		ФайлДБФ.Следующая();

	КонецЦикла;

	ФайлДБФ.ЗакрытьФайл();

КонецПроцедуры


&НаКлиенте
Процедура ПрочитатьXLS()
	
	ДанныеФайла = Новый ДвоичныеДанные(Объект.ПутьКФайлу);
	АдресДанных = ПоместитьВоВременноеХранилище(ДанныеФайла);
	
	ПрочитатьXLSНаСервере(АдресДанных);
		
КонецПроцедуры
	
&НаСервере
Процедура ПрочитатьXLSНаСервере(АдресДанных)

	ТабДок = Новый ТабличныйДокумент;

	Данные = ПолучитьИзВременногоХранилища(АдресДанных);
	ПутьКФайлуНаСервере = ПолучитьИмяВременногоФайла("xls");
	Данные.Записать(ПутьКФайлуНаСервере);

	Попытка
		ТабДок.Прочитать(Объект.ПутьКФайлу, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст ="Не удалось прочитать указанный файл по причине:" + ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;

	КоличествоСтрок = ТабДок.ВысотаТаблицы;

	Для НомерСтроки = 2 По КоличествоСтрок Цикл
		СтрокаДанных = Объект.ДанныеФайла.Добавить();

		ЦенаСтрокой       = ТабДок.ПолучитьОбласть("R" + Формат(НомерСтроки, "ЧГ=0") + "C" + "2").ТекущаяОбласть.Текст;
		КоличествоСтрокой = ТабДок.ПолучитьОбласть("R" + Формат(НомерСтроки, "ЧГ=0") + "C" + "3").ТекущаяОбласть.Текст;

		СтрокаДанных.Наименование 	= ТабДок.ПолучитьОбласть("R" + Формат(НомерСтроки, "ЧГ=0") + "C"
			+ "1").ТекущаяОбласть.Текст;
		СтрокаДанных.Цена 			= ПривестиСтрокуКЧислу(ЦенаСтрокой);
		СтрокаДанных.Количество 	= ПривестиСтрокуКЧислу(КоличествоСтрокой);
		СтрокаДанных.Стоимость		= СтрокаДанных.Цена * СтрокаДанных.Количество;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьTXT_CSV(ПоследовательноеЧтение)

	Если ПоследовательноеЧтение Тогда

		Текст = Новый ЧтениеТекста;
		Текст.Открыть(Объект.ПутьКФайлу);

		ТекСтрока = Текст.Прочитать();
		Пока ТекСтрока <> Истина Цикл

			МассивСлов = СтрРазделить(ТекСтрока, Символы.Таб + Символы.ПС);

			Если МассивСлов.Количество() < 3 Тогда
				Продолжить;
			КонецЕсли;

			НоваяСтрока =Объект.ДанныеФайла.Добавить();
			НоваяСтрока.Наименование = 	МассивСлов[0];
			НоваяСтрока.Цена         =	Число(МассивСлов[1]);
			НоваяСтрока.Количество   =	Число(МассивСлов[2]);
			НоваяСтрока.Стоимость    =	НоваяСтрока.Цена * НоваяСтрока.Количество;

			ТекСтрока = Текст.ПрочитатьСтроку();

		КонецЦикла;
	Иначе
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(Объект.ПутьКФайлу);
		Для НомерСтроки = 1 По Текст.КоличествоСтрок() Цикл

			ТекСтрока = Текст.ПолучитьСтроку(НомерСтроки);
			МассивСлов = СтрРазделить(ТекСтрока, ";/\|" + Символы.Таб);

			Если МассивСлов.Количество() < 3 Тогда
				Продолжить;
			КонецЕсли;

			НоваяСтрока =Объект.ДанныеФайла.Добавить();
			НоваяСтрока.Наименование = 	МассивСлов[0];
			НоваяСтрока.Цена = 			МассивСлов[1];
			НоваяСтрока.Стоимость = 	МассивСлов[2];

		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Проводник = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Проводник.Заголовок = "Выберите файл с контрагентами";

	Если Объект.ФорматФайла = "Все" Тогда
		Фильтр = "Все файлы (*.*) |*.*";
	ИначеЕсли Объект.ФорматФайла = "TXT" Тогда
		Фильтр = "Текстовый документ (*.txt) |*.txt";
	ИначеЕсли Объект.ФорматФайла = "CSV" Тогда
		Фильтр = "Текстовый документ (*.csv) |*.csv";
	ИначеЕсли Объект.ФорматФайла = "XLS" Тогда
		Фильтр = "Excel (*.xls,*.xlsx) |*.xls,*.xlsx";
	ИначеЕсли Объект.ФорматФайла = "DBF" Тогда
		Фильтр = "Документ (*.dbf) |*.dbf";
	ИначеЕсли Объект.ФорматФайла = "XML" Тогда
		Фильтр = "Разметка (*.xml) |*.xml";
	Иначе
		Возврат;
	КонецЕсли;

	Проводник.Фильтр = Фильтр;

	Оповещение = Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтотОбъект);
	Проводник.Показать(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Объект.ПутьКФайлу = ВыбранныеФайлы[0];

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Объект.ФорматФайла = "Все";

КонецПроцедуры

Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Истина)

	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);

	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда

		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;

		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;

	Возврат ЗначениеЧисла;

КонецФункции